---
http_interactions:
- request:
    method: get
    uri: https://planning.randwick.nsw.gov.au/pages/xc.track.advanced/SearchApplication.aspx
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - planning.randwick.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Set-Cookie:
      - ASP.NET_SessionId=txyo3crao4it3js3mjhj2nao; path=/; HttpOnly; SameSite=Lax
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Thu, 09 Jul 2020 01:38:48 GMT
      Content-Length:
      - '137806'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 14 May 2019 14:00:00 GMT
- request:
    method: get
    uri: https://planning.randwick.nsw.gov.au/pages/xc.track.advanced/SearchApplication.aspx?d=last14days&k=LodgementDate&o=xml&t=217
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.7.6 Ruby/2.5.1p57 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - ASP.NET_SessionId=txyo3crao4it3js3mjhj2nao
      Host:
      - planning.randwick.nsw.gov.au
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - application/xml; charset=utf-8
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Thu, 09 Jul 2020 01:39:01 GMT
      Content-Length:
      - '156297'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIj8+PE5ld0RhdGFTZXQ+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODkxMjA8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMjEvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+QXdhaXRpbmcgQWxsb2NhdGlvbjwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMjE8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkRldGFjaGVkIGV4dGVuc2lvbiB0byB0aGUgZHdlbGxpbmcgKEhlcml0YWdlIENvbnNlcnZhdGlvbiBBcmVhKSAtIE5TVyBQbGFubmluZyBQb3J0YWwgUmVmOiBQQU4tMjAyODguPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDhUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDlUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+NDc5NDMuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPi0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODkxMjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzA0NTMwPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMDQ1MzA8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTEyMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT43IERpbmUgU3RyZWV0DVJBTkRXSUNLICBOU1cgIDIwMzEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+RWFzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MTIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjUyMTk2PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MTIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+QkVMTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TUFMQ09MTSBBTkRSRVc8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk1BICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIE0gQSBCZWxsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkxMjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjUyMTk3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MTIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+R0FMTEFHSEVSPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5DQVRIRVJJTkUgQU5HRUxBPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5DQSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBDIEEgR2FsbGFnaGVyPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkxMjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NTA3MDA0PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MTIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0hVTkc8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNIT05BIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXMgUyBDaHVuZzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MTIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI0MTI4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MTIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkxMjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDQ1MDgxPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MTIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0hVTkc8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNIT05BIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXMgUyBDaHVuZzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MTIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTEyMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkxMjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODkwNjU8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMjAvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+QXdhaXRpbmcgQWxsb2NhdGlvbjwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMjA8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkRlbW9saXRpb24gb2YgdGhlIGV4aXN0aW5nIGR3ZWxsaW5nIGhvdXNlLCBhdHRhY2hlZCBnYXJhZ2UgYW5kIHJlbW92YWwgb2YgYWxsIGV4aXN0aW5nIHRyZWVzIGZvciB0aGUgY29uc3RydWN0aW9uIG9mIGFuIGF0dGFjaGVkIER1YWwgT2NjdXBhbmN5ICh2YXJpYXRpb24gdG8gZmxvb3Igc3BhY2UgcmF0aW8pIC0gTlNXIFBsYW5uaW5nIFBvcnRhbCBSZWY6IFBBTi0xOTgwNi48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNy0wOFQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNy0wOVQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4xMjk1MTA2LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj4tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjE8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg5MDY1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5NTgwOTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk1ODA5PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODkwNjU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjcgQWRhbXMgQXZlbnVlDU1BTEFCQVIgIE5TVyAgMjAzNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPlNvdXRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA2NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM5NTI5OTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA2NTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPktFTExZPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5DUkFJRyA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkMgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEMgS2VsbHk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA2NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNDEyODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA2NTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDY1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE3MjU5MzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA2NTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4zPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkRSQUtFPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5MRUEgRUxMRU48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkxFQyAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEwgRSBDIERyYWtlPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkwNjU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Mzk1Mjk5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MDY1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjQ8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+S0VMTFk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkNSQUlHIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+QyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgQyBLZWxseTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDY1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ2MTQ2MTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA2NTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPktFTExZPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5FTExFTiBST1NFPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5FUiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBFIFIgS2VsbHk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA2NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40NjE0NjI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODkwNjU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5MT05HTVVJUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TUFSSyBKQU1FUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TUogICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgTSBKIExvbmdtdWlyPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkwNjU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MDY1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA2NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4OTA4ODwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzUwMi8yMDE3L0I8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMTc8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj41MDI8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QW1lbmRtZW50PkI8L0FtZW5kbWVudD4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlNlY3Rpb24gNC41NSgyKSAtIG1vZGlmaWNhdGlvbiB0byBhcHByb3ZlZCBkZXZlbG9wbWVudCBmb3IgbWlub3IgY2hhbmdlcyB0byB1c2FibGUgc3BhY2VzIGluY2x1ZGluZyBiYWxjb255IGFyZWFzLiBPcmlnaW5hbCBDb25zZW50OiBEZW1vbGl0aW9uIG9mIGV4aXN0aW5nIHN0cnVjdHVyZXMsIGNvbnN0cnVjdGlvbiBvZiBwYXJ0IDMsIHBhcnQgNCBzdG9yZXkgcmVzaWRlbnRpYWwgZmxhdCBidWlsZGluZyBjb250YWluaW5nIDE2IGR3ZWxsaW5ncywgYmFzZW1lbnQgcGFya2luZyBmb3IgMjIgY2FycywgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MgKHZhcmlhdGlvbiB0byBoZWlnaHQgY29udHJvbCkuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDhUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDhUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+NTIwMDAwMC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+Q2hhaHJhemFkIFJhaGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA4ODwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMTE5NTc8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMxMTk1NzwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MDg4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjE0OS0xNTEgTWFsYWJhciBSb2FkDVNPVVRIIENPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5FYXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkwODg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxMTk2MDwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzExOTYwPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODkwODg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MTUzIE1hbGFiYXIgUm9hZA1TT1VUSCBDT09HRUUgIE5TVyAgMjAzNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4OTA4ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzExOTYyPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMTE5NjI8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA4ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4xNTUgTWFsYWJhciBSb2FkDVNPVVRIIENPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+RWFzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDg4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDE5NTE2PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MDg4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TU9SUklTT048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNDT1RUIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBNb3JyaXNvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDg4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ0MTk0NjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA4ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1PUlJJU09OPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5TQ09UVCBNVVJSQVk8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlNNICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIFMgTSBNb3JyaXNvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDg4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA4ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDg4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjU2NzgyPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg5MDg4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SkFOTUFSIFVOSVRTIFBUWSBMVEQ8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5KYW5tYXIgVW5pdHMgUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg5MDg4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4OTA4ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODkwODg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODg5NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMTkvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMxOTwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+QWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byBleGlzdGluZyBkd2VsbGluZyBob3VzZSwgaW5jbHVkaW5nIGdyb3VuZCBmbG9vciBleHRlbnNpb24gdG8gdGhlIHJlYXIgd2l0aCBkZWNrLCBuZXcgZmlyc3QgZmxvb3IgYWRkaXRpb24sIGxhbmRzY2FwaW5nIGFuZCBhc3NvY2lhdGVkIHdvcmtzLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTA4VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTA4VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjU4NTE2MC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+VGhvbWFzIE1pdGhlbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODk1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4yOTYyNjg8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5NjI2ODwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4OTU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjQzIEFsbWEgUm9hZA1NQVJPVUJSQSAgTlNXICAyMDM1ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5DZW50cmFsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg5NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zOTA4NjE8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NT1JFTExJPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5NQU5ESSBKT1k8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk1KICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIE0gSiBNb3JlbGxpPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg5NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjI5OTE2PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4OTU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SFVJPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5DSFVORyBIQVU8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkNIICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEMgSCBIdWk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODk1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODk1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yMjk5MTY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5IVUk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkNIVU5HIEhBVTwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+Q0ggICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgQyBIIEh1aTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4OTU4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjIyOTkxNzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODk1ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkxJTTwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TElOREFXQVRJIEhBTElNPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5MSCAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBMIEggTGltPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg5NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4OTU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODk1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4ODkxODwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMxOC8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzE4PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5EZW1vbGl0aW9uIG9mIGV4aXN0aW5nIHN0cnVjdHVyZXMgYW5kIGNvbnN0cnVjdGlvbiBvZiBhIHR3byBzdG9yZXkgYXR0YWNoZWQgZHVhbCBvY2N1cGFuY3ksIGxhbmRzY2FwaW5nIGFuZCBhc3NvY2lhdGVkIHdvcmtzLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTA4VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTA4VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0Pjk0ODMyOC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+VGhvbWFzIE1pdGhlbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODkxODwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMDY3NDM8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMwNjc0MzwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4OTE4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjggRmxpbmRlcnMgU3RyZWV0DU1BVFJBVklMTEUgIE5TVyAgMjAzNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Tb3V0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg5MTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zODA0NTQ8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5MTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HUkVFTjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+QlJFVFQgTUFMQ09NPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5CTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBCIE0gR3JlZW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODkxODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zODA0NTU8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5MTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5MQVk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNBTiBTQU48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlNTICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIFMgUyBMYXk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODkxODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zODQyMzI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5MTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5DQVZMT1ZJQzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+QU5USE9OWSBNQVJLPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5BTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBBIE0gQ2F2bG92aWM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODkxODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg5MTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODkxODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40ODI2MjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODkxODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkNBVkxPVklDPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5EQU5JQ0EgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5EICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcnMgRCBDYXZsb3ZpYzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4OTE4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ4MjYxPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4OTE4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0FWTE9WSUM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNURUpFUEFOIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBDYXZsb3ZpYzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4OTE4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODkxODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg5MTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODg3NDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS84ODMvMjAxMC9CPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDEwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+ODgzPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFtZW5kbWVudD5CPC9BbWVuZG1lbnQ+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5TZWN0aW9uIDQuNTUgbW9kaWZpY2F0aW9uIG9mIGFwcHJvdmVkIGRldmVsb3BtZW50IGZvciB0aGUgcmVsb2NhdGlvbiBvZiB0aGUga2l0Y2hlbiBhbmQgdGhlIGJhciB0byB0aGUgcmVhciBvZiB0aGUgZXhpc3RpbmcgcmVzdGF1cmFudCwgcmVhcnJhbmdlbWVudCBvZiBzZWF0aW5nLCBhbmQgYWRkaXRpb24gb2YgYSBuZXcga2l0Y2hlbiBleGhhdXN0cy4gT3JpZ2luYWwgQ29uc2VudDogQXBwbGljYXRpb24gdG8gZXh0ZW5kIHRoZSBleGlzdGluZyByZXN0YXVyYW50IHdpdGggaG91cnMgb2Ygb3BlcmF0aW9uIDEwYW0gdG8gMTBwbSA3IGRheXMgaW50byB0aGUgYWRqb2luaW5nIHRlbmFuY3kgdG8gaW5jcmVhc2UgdGhlIHNlYXRpbmcgY2FwYWNpdHkgdG8gMjk0IHBhdHJvbnMsIGludGVybmFsIGZpdC1vdXQsIG5ldyBzaG9wZnJvbnRzIGFuZCBuZXcgc2lnbmFnZS48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNy0wN1QwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNy0wN1QwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD42MTA1MC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+RXVuaWNlIEh1YW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4yPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODc0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMjM0ODQ8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMyMzQ4NDwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjIzOC0yNDAgQ29vZ2VlIEJheSBSb2FkDUNPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5FYXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg3NDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMyNDQ5NTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzIzNDg0PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3NDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MS8yMzgtMjQwIENvb2dlZSBCYXkgUm9hZA1DT09HRUUgIE5TVyAgMjAzNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODc0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM1MzMyMTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODc0OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFMQlVKQTwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TUFSSUEgREVMPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5NRENMIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBNIEQgQyBMIEFsYnVqYTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NzQ5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM1MzMyMDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODc0OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkVEV0FSRFM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkNBTUVST04gTVVSUkFZPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5DTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBDIE0gRWR3YXJkczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NzQ5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMyODAzNDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODc0OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkNNIEhBSVJJUyBBUkNISVRFQ1RTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+Q00gSGFpcmlzIEFyY2hpdGVjdHM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODc0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3NDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODc0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yMDk2NTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3NDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5USEUgT1dORVJTIFNUUkFUQSBQTEFOIE5PIDY3NDQxPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+VGhlIE93bmVycyAtIFN0cmF0YSBQbGFuIE5vLiA2NzQ0MTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NzQ5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODc0OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg3NDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODg4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS82NTYvMjAxMy9CPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5VbmRlciBBc3Nlc3NtZW50PC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAxMzwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjY1NjwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBbWVuZG1lbnQ+QjwvQW1lbmRtZW50Pg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+U2VjdGlvbiA0LjU1IG1vZGlmaWNhdGlvbiBvZiBhcHByb3ZlZCBkZXZlbG9wbWVudCB0byBhZGQgYSBiYXRocm9vbSB3aXRoaW4gdGhlIGF0dGljIHNwYWNlIGFib3ZlIFVuaXQgNC4gT3JpZ2luYWwgQ29uc2VudDogQWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byB0aGUgZXhpc3RpbmcgcmVzaWRlbnRpYWwgZmxhdCBidWlsZGluZyB0byBpbnN0YWxsIGF0dGljIHJvb21zIGluIHRoZSByb29mIHNwYWNlIG92ZXIgdW5pdHMgMyAmYW1wOyA0IGVhY2ggd2l0aCBuZXcgZ2FibGUgZW5kZWQgZG9ybWVyIHdpbmRvd3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDdUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDdUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTQwMDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5Sb3NlYW5uYSBNZWVjaCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjI8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMyNzkzOTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzIyMDU1PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+My8xMTYgQ2FycmluZ3RvbiBSb2FkDVJBTkRXSUNLICBOU1cgIDIwMzEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPk5vcnRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzI3OTQwPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMjIwNTU8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT40LzExNiBDYXJyaW5ndG9uIFJvYWQNUkFORFdJQ0sgIE5TVyAgMjAzMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+Tm9ydGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMjIwNTU8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMyMjA1NTwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4ODMxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjExNiBDYXJyaW5ndG9uIFJvYWQNUkFORFdJQ0sgIE5TVyAgMjAzMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Ob3J0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg4MzE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNDUzMDI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNzQ0ODM8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5BUksgREVTSUdOIFNUVURJTyBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+QXJrIERlc2lnbiBTdHVkaW8gUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM1MjUyMDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4zPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkJFUlJBPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5FTEVOQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkUgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEUgQmVycmE8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNTI1MTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5LUklUSUtPUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+Q09OU1RBTlRJTkUgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5DICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBDIEtyaXRpa29zPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg4MzE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4ODMxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4ODU1MTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMxNy8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzE3PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5BbHRlcmF0aW9ucyBhbmQgYWRkaXRpb25zIHRvIGV4aXN0aW5nIHJlc2lkZW50aWFsIGR3ZWxsaW5nIGluY2x1ZGluZyBleHRlbnNpb24gb2YgcmVhciBkZWNrLCBwYXJ0aWFsIGRlbW9saXRpb24gb2Ygcm9vZiBmb3IgcHJvcG9zZWQgc3R1ZHkgYW5kIHRlcnJhY2UuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDZUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDdUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTEwMDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5Sb3NlYW5uYSBNZWVjaCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjM8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4NTUxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxOTQzOTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE5NDM5PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1NTE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+NyBWYXJuYSBTdHJlZXQNQ0xPVkVMTFkgIE5TVyAgMjAzMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPk5vcnRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODU1MTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMyODM4MjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODU1MTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPklOVkVTVFBPTCBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+SW52ZXN0cG9sIFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODU1MTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDY2NzY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1NTE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5CQVNTRVJBQklFPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5HQVZJTiA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkcgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEcgQmFzc2VyYWJpZTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NTUxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ0MjQ0MzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODU1MTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1BUksgU0hBUElSTyBBUkNISVRFQ1RTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TWFyayBTaGFwaXJvIEFyY2hpdGVjdHM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODU1MTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNzU3OTM8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1NTE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5CQVNTRVJBQklFPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5HQVZJTiBIRVJTQ0g8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkdIICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEcgSCBCYXNzZXJhYmllPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg1NTE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NTUxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODU1MTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4ODcwNTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMxNi8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzE2PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5EZW1vbGl0aW9uIG9mIHRoZSBleGlzdGluZyBkd2VsbGluZyBhbmQgY29uc3RydWN0aW9uIG9mIDIgc3RvcmV5IGR3ZWxsaW5nIG92ZXIgYmFzZW1lbnQgcGFya2luZyBhbmQgaW4tZ3JvdW5kIHN3aW1taW5nIHBvb2wuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDdUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDdUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTEyNDE3NC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+RXVuaWNlIEh1YW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4yPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODcwNTwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMTc0MjQ8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMxNzQyNDwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NzA1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjMgUm9uIEZpbGJlZSBQbGFjZQ1NQVJPVUJSQSAgTlNXICAyMDM1ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5DZW50cmFsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg3MDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zMzM3MTU8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3MDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5CT1VSVFNPVUtMSVM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpPQU5ORSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkogICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBKIEJvdXJ0c291a2xpczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NzA1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMzMDgyMDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODcwNTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlRFQ0hOSUsgSEFVUyBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+VGVjaG5payBIYXVzIFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODcwNTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3MDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODcwNTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MDE4NzY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3MDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5CRUxBVklDPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5NQVJJSkFOQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk0gICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBNIEJlbGF2aWM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODcwNTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xODE3MDY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg3MDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5CRUxBVklDPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5TVEVQSEVOIE5JQ0hPTEFTPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5TTiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBTIE4gQmVsYXZpYzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NzA1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODcwNTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg3MDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODg0ODM8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS81NTcvMjAxOS9BPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDE5PC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+NTU3PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFtZW5kbWVudD5BPC9BbWVuZG1lbnQ+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5TZWN0aW9uIDQuNTUgbW9kaWZpY2F0aW9uIG9mIGFwcHJvdmVkIGRldmVsb3BtZW50IGluY2x1ZGluZyBleHRlbnNpb24gb2YgbGV2ZWwgMSwgcmVjb25maWd1cmF0aW9uIG9mIHJvb21zIGFuZCB3YWxscywgYWRkaXRpb24gb2YgYW5kIGFsdGVyYXRpb25zIHRvIHdpbmRvd3MsIHJlbW92YWwgb2Ygd2F0ZXIgZmVhdHVyZSwgY2hhbmdlcyB0byBmYcOnYWRlLCBhZGRpdGlvbiBvZiBsYW5kc2NhcGUgcGxhbnRlciwgYWRkaXRpb24gb2YgYW5kIGFsdGVyYXRpb25zIHRvIHNreWxpZ2h0cyBhbmQgYXNzb2NpYXRlZCB3b3Jrcy4gT3JpZ2luYWwgQ29uc2VudDogQWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byBleGlzdGluZyByZXNpZGVudGlhbCBkd2VsbGluZywgaW5jbHVkaW5nIHJlY29uZmlndXJhdGlvbiBvZiBhbGwgbGV2ZWxzLCBzd2ltbWluZyBwb29sIGFuZCBhc3NvY2lhdGVkIGxhbmRzY2FwZSB3b3JrcyAodmFyaWF0aW9uIHRvIGhlaWdodCBjb250cm9sKS48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNy0wNlQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNy0wNlQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4xNTIyMjgzLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5QZXJyeSBIZWFkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjM8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4NDgzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMwODUyODwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzA4NTI4PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0ODM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjYgSGFtaWx0b24gU3RyZWV0DUNPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPk5vcnRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQ4MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMyNjUyNzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODQ4MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1BTExPUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+VEhFT0RPUkUgR0VPUkdFPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5URyAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBUIEcgTWFsbG9zPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg0ODM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NTA2NTI1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NDgzPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+T09JPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5TWkVZVUFOIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBPb2k8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQ4MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0ODM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQ4MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MzU0MTg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0ODM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5PT0k8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNaRVlVQU4gTUlDSEFFTDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+U00gICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBNIE9vaTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NDgzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQzNTQxOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODQ4MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4zPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlRVTlNUQUxMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5BREVMRSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkEgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEEgVHVuc3RhbGw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQ4MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0ODM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NDgzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg4NDA4PC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzE1LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMTU8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkRlbW9saXRpb24gb2YgZXhpc3Rpbmcgc3RydWN0dXJlcyBhbmQgY29uc3RydWN0aW9uIG9mIGEgdHdvLXN0b3JleSBkd2VsbGluZyBob3VzZSB3aXRoIHNlbWktYmFzZW1lbnQsIGRldGFjaGVkIGNhYmFuYSBhbmQgc3dpbW1pbmcgcG9vbCBhdCB0aGUgcmVhciwgbGFuZHNjYXBpbmcsIGZlbmNpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDZUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDZUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTI2NzM1OS4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+TG91aXMgQ29vcmV5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4zPC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQwODwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMDk4NzU8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMwOTg3NTwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NDA4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjcgSW5tYW4gU3RyZWV0DU1BUk9VQlJBICBOU1cgIDIwMzUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5DZW50cmFsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg0MDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MTUyMjg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0MDg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HT1JET048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkJST05XWU4gTUVHQU48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkJNICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBCIE0gR29yZG9uPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg0MDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDk1NDE8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg0MDg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HT1JET048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk1BTENPTE0gUk9TUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TVIgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgTSBSIEdvcmRvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NDA4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQwMzU0OTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODQwODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFMRUMgUEFQUEFTIEFSQ0hJVEVDVFMgUFRZIExURDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkFsZWMgUGFwcGFzIEFyY2hpdGVjdHMgUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NDA4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODQwODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NDA4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE0MDI1MTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODQwODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlRIRSBPV05FUlMgU1RSQVRBIFBMQU4gTk8gMTQ3OTU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5UaGUgT3duZXJzIC0gU3RyYXRhIFBsYW4gTm8uIDE0Nzk1PC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg0MDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4NDA4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODQwODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4ODUyODwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzI3LzIwMjAvQjwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+VW5kZXIgQXNzZXNzbWVudDwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4yNzwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBbWVuZG1lbnQ+QjwvQW1lbmRtZW50Pg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+U2VjdGlvbiA0LjU1IG1vZGlmaWNhdGlvbiBvZiBhcHByb3ZlZCBkZXZlbG9wbWVudC4gT3JpZ2luYWwgY29uc2VudDogRGVtb2xpdGlvbiBvZiBleGlzdGluZyBzaW5nbGUgZ2FyYWdlIGFuZCBjb25zdHJ1Y3Rpb24gb2YgYSBuZXcgZ2FyYWdlIHdpdGhpbiB0aGUgc2FtZSBsb2NhdGlvbiBmb3J3YXJkIG9mIGZyb250IGZhw6dhZGUgKEhlcml0YWdlIEl0ZW0pLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTA2VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTA2VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjY2MDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5QZXJyeSBIZWFkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjM8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4NTI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMwODEzMzwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzA4MTMzPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1Mjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjcgR29vcmF3YWhsIEF2ZW51ZQ1MQSBQRVJPVVNFICBOU1cgIDIwMzYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPlNvdXRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODUyODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMyODM4MjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODUyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPklOVkVTVFBPTCBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+SW52ZXN0cG9sIFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODUyODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNjQ3NzQ8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1Mjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5ORUlMU09OPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5CUkVUVCBNQVhXRUxMPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5CTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBCIE0gTmVpbHNvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NTI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI2NDc3NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODUyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT40PC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1BR05BTkk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkVMSVNBQkVUVEEgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5FICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBFIE1hZ25hbmk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODUyODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNjQ3NzQ8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODg1Mjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MzwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5ORUlMU09OPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5CUkVUVCBNQVhXRUxMPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5CTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBCIE0gTmVpbHNvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4NTI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODUyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODg1Mjg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODgyODk8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMTQvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+VW5kZXIgQXNzZXNzbWVudDwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMTQ8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlRvcnJlbnMgdGl0bGUgc3ViZGl2aXNpb24gb2YgYW4gYXBwcm92ZWQgYXR0YWNoZWQgZHVhbCBvY2N1cGFuY3kgaW50byB0d28gYWxsb3RtZW50cy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNy0wM1QwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNy0wM1QwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4wLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5Sb3NlYW5uYSBNZWVjaCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjY8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4Mjg5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxODAwODwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE4MDA4PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgyODk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MTUgU29sYW5kZXIgU3RyZWV0DU1BVFJBVklMTEUgIE5TVyAgMjAzNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPlNvdXRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODI4OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE0NTg4NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODI4OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNQSVRFUkk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpPSE4gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIFNwaXRlcmk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODI4OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgyODk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODI4OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjg5NTg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgyODk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQUZGT1VMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5KSU1NWSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkogICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEogUmFmZm91bDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4Mjg5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODI4OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgyODk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODgyNzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMTMvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+VW5kZXIgQXNzZXNzbWVudDwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMTM8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkNvbnZlcnNpb24gb2YgQ29tcGFueSB0aXRsZSB0byBTdHJhdGEgVGl0bGUgb2YgMTYgbG90cy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNy0wM1QwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNy0wM1QwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4wLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5BbGV4YW5kcmEgTWFya3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjY8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4MjcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5NzY2NzwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk3NjY3PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgyNzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MzIyIEFyZGVuIFN0cmVldA1DT09HRUUgIE5TVyAgMjAzNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODI3MDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjIzNjAxODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODI3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkxJQklSTyBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TGliaXJvIFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODI3MDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDYzNzk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgyNzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5KT0hOIEFWSUdET1IgJmFtcDsgQVNTT0NJQVRFUyBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+Sm9obiBBdmlnZG9yICZhbXA7IEFzc29jaWF0ZXMgUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MjcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODI3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MjcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMxMzA1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4MjcwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TUVOVE9OIFBUWSBMVEQ8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NZW50b24gUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MjcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODI3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgyNzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODgwNzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMTIvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMxMjwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+RGVtb2xpdGlvbiB0byByZWFyIG9mIGR3ZWxsaW5nIGFuZCBhbHRlcmF0aW9ucyB0byByZWFyIG9mIHNlbWkgZGV0YWNoZWQgZHdlbGxpbmcsIG5ldyBiYXNlbWVudCBnYXJhZ2UsIGxhbmRzY2FwZSB3b3JrcyBhbmQgdHJlZSByZW1vdmFsIGZyb20gcmVhciB5YXJkLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTAyVDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTAzVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjUzMzc1My4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+UGVycnkgSGVhZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz43PC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4ODA3MDwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMTY1NTA8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMxNjU1MDwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4MDcwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjUgUXVhaWwgU3RyZWV0DUNPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Ob3J0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwNzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40NTM5MTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODA3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFTSE1PUkU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk1BUkEgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5NICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcnMgTSBBc2htb3JlPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwNzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NTAwOTIwPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4MDcwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SkVGRiBLQVJTS0VOUyBERVNJR05FUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkplZmYgS2Fyc2tlbnMgRGVzaWduZXI8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODA3MDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNDEyODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODA3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MDcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM0ODc1ODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODA3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFOVElMTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TElTQSBBTk5FPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5MQSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBMIEEgQW50aWxsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwNzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzQ4NzU3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4MDcwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+U0NITUlEVDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+SUFOIEVER0FSPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5JRSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBJIEUgU2NobWlkdDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MDcwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODA3MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwNzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODc2NDg8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMTEvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMxMTwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+Q29uc3RydWN0aW9uIG9mIGFuIGVpZ2h0ZWVuICgxOCkgc3RvcmV5IG1peGVkLXVzZSBkZXZlbG9wbWVudCBjb21wcmlzaW5nIGdyb3VuZCAvIGZpcnN0IC8gc2Vjb25kIGZsb29yIGNvbW1lcmNpYWwgYW5kIGEgYm9hcmRpbmcgaG91c2UgY29tcHJpc2luZyAzOTkgYm9hcmRpbmcgcm9vbXMgYW5kIGEgbWFuYWdlcuKAmXMgcm9vbSwgYmFzZW1lbnQgcGFya2luZywgcHVibGljIHBsYXphLCBwZWRlc3RyaWFuIHRocm91Z2gtc2l0ZSBsaW5rcywgc2lnbmFnZSwgZWFydGh3b3JrcywgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MgKHZhcmlhdGlvbnMgdG8gYnVpbGRpbmcgaGVpZ2h0IGFuZCBGU1Igc3RhbmRhcmRzIG9mIHRoZSBSTEVQIDIwMTIpLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTAxVDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTAzVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0Pjc0NTkyMTg0LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5Mb3VpcyBDb29yZXkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjg8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMwMTA0NDwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzAxMDQ0PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2NDg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MzkxLTM5MyBBbnphYyBQYXJhZGUNS0lOR1NGT1JEICBOU1cgIDIwMzIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPldlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+Mjk2NjgzPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4yOTY2ODM8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4zOTctMzk3QSBBbnphYyBQYXJhZGUNS0lOR1NGT1JEICBOU1cgIDIwMzIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+V2VzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMDEwNDU8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMwMTA0NTwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjE3IEJ1bm5lcm9uZyBSb2FkDUtJTkdTRk9SRCAgTlNXICAyMDMyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5XZXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5NjQ1NjwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk2NDU2PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2NDg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+Mzk1IEFuemFjIFBhcmFkZQ1LSU5HU0ZPUkQgIE5TVyAgMjAzMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPldlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjY5MjUzPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UEFUUk9TPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5EQVZJRCBJU1JBRUw8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkRJICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkVzdCBMYXRlIE1yIEQgSSBQYXRyb3M8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD42OTI1NDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlBBVFJPUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TkFKSUJBIFJBU0hPPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5OUiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcnMgTiBSIFBhdHJvczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ5OTU0NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlBFUlBFVFVBTCBDT1JQT1JBVEUgVFJVU1QgTElNSVRFRDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlBlcnBldHVhbCBDb3Jwb3JhdGUgVHJ1c3QgTGltaXRlZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQwNDcwNDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+RXh0ZXJuYWwgUmVmZXJyYWwgQWdlbmN5ICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT40PC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk5TVyBQT0xJQ0UgU0VSVklDRSBDUklNRSBQUkVWRU5USU9OPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TlNXIFBvbGljZSBTZXJ2aWNlIC0gQ3JpbWUgUHJldmVudGlvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM1MTAwMTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+RXh0ZXJuYWwgUmVmZXJyYWwgQWdlbmN5ICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJPQURTIEFORCBNQVJJVElNRSBTRVJWSUNFUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJvYWRzIGFuZCBNYXJpdGltZSBTZXJ2aWNlczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2MDU4MDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+RXh0ZXJuYWwgUmVmZXJyYWwgQWdlbmN5ICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4zPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNZRE5FWSBBSVJQT1JUIENPUlBPUkFUSU9OIExJTUlURUQ8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5TeWRuZXkgQWlycG9ydCBDb3Jwb3JhdGlvbiBMaW1pdGVkPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDA5MjI5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5FeHRlcm5hbCBSZWZlcnJhbCBBZ2VuY3kgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+VFJBTlNQT1JUIE5TVyBTWURORVkgTElHSFQgUkFJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlRyYW5zcG9ydCBOU1cgLSBTeWRuZXkgTGlnaHQgUmFpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI0MTI4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDcyMjczPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UEVSUEVUVUFMIENPUlBPUkFURSBUUlVTVCBMSU1JVEVEPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UGVycGV0dWFsIENvcnBvcmF0ZSBUcnVzdCBMaW1pdGVkPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMxMC8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5DYW5jZWxsZWQ8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzEwPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5Qcm9wb3NlZCBDaGFyY29hbCBHcmlsbCB0byBhbiBleGlzdGluZyByZXN0YXVyYW50IHdpdGggZHVjdGVkIGV4aGF1c3QgdG8gdGhlIHJvb2YgYWJvdmUuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDctMDFUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDJUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPERldGVybWluYXRpb25EYXRlPjIwMjAtMDctMDNUMTE6MDE6MzQuNDkrMTA6MDA8L0RldGVybWluYXRpb25EYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjIwMDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj4tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjg8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8RGV0ZXJtaW5hdGlvbj4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxEZXRlcm1pbmF0aW9uRGF0ZT4yMDIwLTA3LTAzVDExOjAxOjM0LjQ5KzEwOjAwPC9EZXRlcm1pbmF0aW9uRGF0ZT4NCiAgICAgIDxFZmZlY3RpdmVEYXRlPjIwMjAtMDctMDNUMDA6MDA6MDArMTA6MDA8L0VmZmVjdGl2ZURhdGU+DQogICAgICA8RGV0ZXJtaW5hdGlvblR5cGU+Q2FuY2VsbGVkPC9EZXRlcm1pbmF0aW9uVHlwZT4NCiAgICAgIDxEZWNpc2lvbklkPjM3Mzc1NDwvRGVjaXNpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc4MzE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRGV0ZXJtaW5hdGlvbj4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMwMzM0MTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzAzMzQxPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjQyIENvb2dlZSBCYXkgUm9hZA1DT09HRUUgIE5TVyAgMjAzNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQxMjA3MjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkhVSVNNQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlJFTUNPIEFMRVhBTkRFUjwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UkEgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUiBBIEh1aXNtYW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDU3ODc8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HRUMgREVTSUdOPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+R0VDIERlc2lnbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM2NDAyMTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT40PC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkVDT05PTVk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkdFT1JHRSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkcgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEcgRWNvbm9teTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM2NDAxODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkVDT05PTVk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpFTlkgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBKIEVjb25vbXk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNjQwMjI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+NTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5MQUxBUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+SkVBTkVUVEUgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBKIExhbGFzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc4MzE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzY0MDE5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3ODMxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+VFJBR09VU1RJUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+R0VPUkdJQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkcgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEcgVHJhZ291c3RpczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM2NDAyMDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzgzMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4zPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlRSQUhBTkFTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5ESUFOQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkQgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEQgVHJhaGFuYXM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzgzMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc4MzE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3ODMxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg4MDMzPC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzA5LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMDk8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkNoYW5nZSBvZiB1c2UgZnJvbSBwcmV2aW91cyBjYWZlIHRvIGxhdW5kcnkgY2FmZSAmYW1wOyBhc3NvY2lhdGVkIHVzZXMgaW5jbHVkaW5nIG91dGRvb3Igc2VhdGluZyBwcmV2aW91c2x5IGFwcHJvdmVkIChIZXJpdGFnZSBBcmVhICZhbXA7IEl0ZW0pLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA3LTAyVDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA3LTAyVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjcyMjcwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5FdW5pY2UgSHVhbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjc8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg4MDMzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5ODE2NzwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk4MTY3PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgwMzM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjA1IEF2b2NhIFN0cmVldA1SQU5EV0lDSyAgTlNXICAyMDMxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODAzMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQxMTkzMTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODAzMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlBBUktFUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+UEVORUxPUEUgQVBSSUw8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlBBICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIFAgQSBQYXJrZXI8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODAzMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MDM2NjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODAzMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNIQVJQPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5SQVlNT05EIEpPSE48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlJKICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIFIgSiBTaGFycDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MDMzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ1MTgzMzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4ODAzMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1JQ0hBRUwgS0lUTUlSSURJUyBBUkNISVRFQ1Q8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NaWNoYWVsIEtpdG1pcmlkaXMgQXJjaGl0ZWN0PC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwMzM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTY3MTE5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg4MDMzPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODgwMzM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Njc4Njc8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgwMzM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NT0JCUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+UkFMUEggSkFTUEVSPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5SSiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBSIEogTW9iYnM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4ODAzMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODgwMzM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg4MDMzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTYxPC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzA4LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMDg8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkFsdGVyYXRpb25zIGFuZCBhZGRpdGlvbnMgdG8gdGhlIHJlYXIgb2YgZXhpc3RpbmcgZHdlbGxpbmcgaG91c2UgaW5jbHVkaW5nIGV4dGVuc2lvbiBvZiBncm91bmQgZmxvb3IgYWxmcmVzY28sIGV4dGVuc2lvbiBvZiBmaXJzdCBmbG9vciwgaW50ZXJuYWwgYWx0ZXJhdGlvbnMgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDctMDFUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTcxNDU3LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5FdW5pY2UgSHVhbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjk8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3NTYxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjM1OTM2MTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzU5MzYxPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1NjE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+NTkgRmFpcnNreSBTdHJlZXQNU09VVEggQ09PR0VFICBOU1cgIDIwMzQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU2MTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzU2MTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTYxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjUwNDU3MzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzU2MTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFFU1RIRVRFIEFSQ0hJVEVDVFVSQUwgJmFtcDsgSU5UUklPUiBERVNJR04gJmFtcDsgRFJBRlRJTkc8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5BZXN0aGV0ZSBBcmNoaXRlY3R1cmFsICZhbXA7IEludHJpb3IgRGVzaWduICZhbXA7IERyYWZ0aW5nPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1NjE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzQ0MTU5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTYxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SU5HTEU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk9STEEgTUFSSUE8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk9NICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIE8gTSBJbmdsZTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTYxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI0MTI4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTYxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1NjE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzQ0MTU4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTYxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SU5HTEU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPktFVklOIEhBUkxPTjwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+S0ggICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgSyBIIEluZ2xlPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1NjE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzQ0MTU5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTYxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SU5HTEU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk9STEEgTUFSSUE8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk9NICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIE8gTSBJbmdsZTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTYxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzU2MTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1NjE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODc1MDE8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS85NjMvMjAxOC9BPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5VbmRlciBBc3Nlc3NtZW50PC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAxODwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjk2MzwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBbWVuZG1lbnQ+QTwvQW1lbmRtZW50Pg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+U2VjdGlvbiA0LjU1IG1vZGlmaWNhdGlvbiB0byBhcHByb3ZlZCBkZXZlbG9wbWVudCBmb3IgdGhlIHJlcGxhY2VtZW50IG9mIHRoZSBleGlzdGluZyBjZW50YWwgbWVjaGFuaWNhbCBleGhhdXN0LiBPcmlnaW5hbCBDb25zZW50OiBSZWZ1cmJpc2htZW50IG9mIGludGVybmFsIGFuZCBleHRlcm5hbCBhcmVhcyBhdCBsb3dlciBncm91bmQsIGdyb3VuZCBhbmQgZmlyc3QgZmxvb3IgbGV2ZWwgaW5jbHVkaW5nIGxldmVsIHBvb2wgYXJlYSBhbmQgbmV3IGF3bmluZyBhbG9uZyBBcmRlbiBTdHJlZXQgJmFtcDsgQ2FyciBTdHJlZXQgKENsYXVzZSA0LjYgdmFyaWF0aW9uIHRvIEZTUikuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+ODY0NjAwMC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+VGhvbWFzIE1pdGhlbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz45PC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4NzUwMTwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4yOTc2MzU8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5NzYzNTwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTAxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjIzOC0yNDYgQXJkZW4gU3RyZWV0DUNPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5FYXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1MDE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNTYwMDQ8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1MDE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HVUlERVI8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk1BUksgUk9OQUxEPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5NUiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBNIFIgR3VpZGVyPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1MDE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDU4MzE3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTAxPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+U0FMVEVSIEJST1RIRVJTIEFTU0VUIE1BTkFHRU1FTlQgUFRZIExURDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlNhbHRlciBCcm90aGVycyBBc3NldCBNYW5hZ2VtZW50IFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzUwMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1MDE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzUwMTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MTA3ODM8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1MDE8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQVAgQ0FQSVRBTCBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TUFQIENhcGl0YWwgUHR5IEx0ZDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTAxPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzUwMTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1MDE8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODc0NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS85NC8yMDE2L0E8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPlVuZGVyIEFzc2Vzc21lbnQ8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDE2PC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+OTQ8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QW1lbmRtZW50PkE8L0FtZW5kbWVudD4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPk1vZGlmaWNhdGlvbiBvZiB0aGUgYXBwcm92ZWQgZGV2ZWxvcG1lbnQgdG8gcmVtb3ZlIGNvbmRpdGlvbiA1MSwgcmVxdWlyaW5nIHRoZSBleGlzdGluZyBvdmVyaGVhZCBwb3dlciBmZWVkIGZyb20gdGhlIGRpc3RyaWJ1dGlvbiBwb2xlIHRvIGJlIHJlbG9jYXRlZCB1bmRlcmdyb3VuZCB2aWEgYSB1Z29oIGNvbm5lY3Rpb24uIE9yaWdpbmFsIGNvbnNlbnQ6IERlbW9saXRpb24gb2YgZXhpc3Rpbmcgc3RydWN0dXJlcywgY29uc3RydWN0aW9uIG9mIHR3byBzdG9yZXkgYXR0YWNoZWQgZHVhbCBvY2N1cGFuY3kgd2l0aCBnYXJhZ2VzIGFuZCBhc3NvY2lhdGVkIHdvcmtzLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTMwVDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTMwVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjcyNjE1OS4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+Um9zZWFubmEgTWVlY2ggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz45PC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4NzQ1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMTI5MTA8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMxMjkxMDwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NDU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjU2LTU2QSBNYXdzb24gUGFyYWRlDUNISUZMRVkgIE5TVyAgMjAzNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Tb3V0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc0NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40Nzk0MzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzQ1ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNJTUlUWklTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5DSFJJU1RPUEhFUiA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkMgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEMgU2ltaXR6aXM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzQ1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40Nzk0NDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzQ1ODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNJTUlUWklTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5OSVRTQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk4gICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBOIFNpbWl0emlzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc0NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzM0NDUyPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NDU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+U1VQRVJJT1IgREVTSUdOUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlN1cGVyaW9yIERlc2lnbnM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzQ1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc0NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzQ1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zMDQyNjA8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc0NTg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5DTEFSS0U8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlJPQkVSVCBBTEFOPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5SQSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBSIEEgQ2xhcmtlPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc0NTg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NDU4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzQ1ODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzQwNS8yMDE5L0E8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPkFwcHJvdmVkPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAxOTwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjQwNTwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBbWVuZG1lbnQ+QTwvQW1lbmRtZW50Pg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+UzQuNTUoMSkgbW9kaWZpY2F0aW9uIHRvIGNvcnJlY3QgZXJyb3IuIE9yaWdpbmFsIGNvbnNlbnQ6IEFsdGVyYXRpb25zIGFuZCBuZXcgdXBwZXIgbGV2ZWwgYWRkaXRpb25zIHRvIHRoZSBleGlzdGluZyBkd2VsbGluZyBob3VzZSBhbmQgb3V0YnVpbGRpbmcgaW5jbHVkaW5nIGNvbnZlcnNpb24gb2YgdGhlIG91dGJ1aWxkaW5nIGludG8gYSBzZWNvbmRhcnkgZHdlbGxpbmcsIGFzc29jaWF0ZWQgc2l0ZSBhbmQgbGFuZHNjYXBlZCB3b3Jrcy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0zMFQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0zMFQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RGV0ZXJtaW5hdGlvbkRhdGU+MjAyMC0wNy0wMlQxNjo1NjoyMCsxMDowMDwvRGV0ZXJtaW5hdGlvbkRhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+NDg5MTA0LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlclRpdGxlPlBsYW5uaW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyVGl0bGU+DQogICAgPE9mZmljZXI+QW5nZWxhIE1hbmFoYW4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz45PC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0NzwvQXBwbGljYXRpb25JZFM+DQogICAgPERldGVybWluYXRpb24+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2NDc8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8RGV0ZXJtaW5hdGlvbkRhdGU+MjAyMC0wNy0wMlQxNjo1NjoyMCsxMDowMDwvRGV0ZXJtaW5hdGlvbkRhdGU+DQogICAgICA8RWZmZWN0aXZlRGF0ZT4yMDIwLTA3LTAyVDAwOjAwOjAwKzEwOjAwPC9FZmZlY3RpdmVEYXRlPg0KICAgICAgPERldGVybWluYXRpb25UeXBlPkFwcHJvdmVkPC9EZXRlcm1pbmF0aW9uVHlwZT4NCiAgICAgIDxBdXRob3JpdHlQYXJ0eT5EZWxlZ2F0ZWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQXV0aG9yaXR5UGFydHk+DQogICAgICA8RGVjaXNpb25JZD4zNzM2ODg8L0RlY2lzaW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0RldGVybWluYXRpb24+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zMTAzODI8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjMxMDM4MjwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjQ3PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjE5IEtlaXRoIFN0cmVldA1DTE9WRUxMWSAgTlNXICAyMDMxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Ob3J0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDc8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNjYxOTY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2NDc8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQU1NRU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPktSSVNUSUUgTUFSRUU8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPktNICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEsgTSBNYW1tZW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzY0NzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNjYxOTU8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2NDc8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5QQUREQU08L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNIQVJBTkpJVCBTSU5HSDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+U1MgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBTIFBhZGRhbTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ0MDk1NDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFMRVhBTkRFUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+U1RFUEhFTiBKQU1FUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+U0ogICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBKIEFsZXhhbmRlcjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ0MDk1NDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkFMRVhBTkRFUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+U1RFUEhFTiBKQU1FUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+U0ogICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUyBKIEFsZXhhbmRlcjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ0MDk1NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkRPQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlRBTiBIVU5HPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5USCAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBUIEggRG9hbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjQ3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzY0NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2NDc8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODczMjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMDcvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMwNzwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+QWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byBleGlzdGluZyBzZW1pLWRldGFjaGVkIGR3ZWxsaW5nIGluY2x1ZGluZyBzdWJzdGFudGlhbCBkZW1vbGl0aW9uIG9mIGV4aXN0aW5nIHdhbGxzIGFuZCByb29mLCBjb25zdHJ1Y3Rpb24gb2YgYW4gaW50ZWdyYXRlZCBzZW1pLWJhc2VtZW50IHNpbmdsZSBjYXIgZ2FyYWdlIGluIHRoZSBmcm9udGFnZSB3aXRoIHRlcnJhY2Ugb24gdG9wLCBncm91bmQgZmxvb3IgZXh0ZW5zaW9uIHRvIHRoZSByZWFyLCBjb25zdHJ1Y3Rpb24gb2YgYSBuZXcgZmlyc3QgZmxvb3Igd2l0aCBjb3VydHlhcmQgYXQgdGhlIGZpcnN0IGZsb29yLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTI5VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTMwVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjQ4OTg4My4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+QWxleGFuZHJhIE1hcmtzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xMDwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODczMjg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzAyNDcyPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMDI0NzI8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzMyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4yMiBDaGF0aGFtIFN0cmVldA1SQU5EV0lDSyAgTlNXICAyMDMxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+RWFzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MzI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTYwNDk2PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzI4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+VFZFU0hPUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+U1ZFVExBTkEgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5TICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcnMgUyBUdmVzaG9yPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczMjg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NTA2MDI3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzI4PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TUlMRVM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkxFV0lTIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TCAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TCBNaWxlczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MzI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjUwNTcwOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzMyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1JTEVTIFRIT1JQIEFSQ0hJVEVDVFM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NaWxlcyBUaG9ycCBBcmNoaXRlY3RzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczMjg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjQxMjg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczMjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzMyODwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40OTQxMzI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczMjg8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQVJUSU5GRVJHVVNPTjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TUlBIEtBVFJZTjwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TUsgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXMgTSBLIE1hcnRpbi1GZXJndXNvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MzI4PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzMyODwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczMjg8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODc1OTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMDYvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMwNjwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+RGVtb2xpdGlvbiBvZiBleGlzdGluZyBjYXJwb3J0IGFuZCBjb25zdHJ1Y3Rpb24gb2YgYSBuZXcgZG91YmxlIGdhcmFnZSB3aXRoIGZpcnN0IGZsb29yIHNlY29uZGFyeSBkd2VsbGluZyBvbiB0b3Agd2l0aCBmcm9udCBhbmQgcmVhci1mYWNpbmcgYmFsY29uaWVzLCBhZGRpdGlvbiBvZiBhIGZpcnN0IGZsb29yIGJhbGNvbnkgdG8gcmVhciBvZiBleGlzdGluZyBzZW1pLWRldGFjaGVkIGR3ZWxsaW5nLCBuZXcgc3dpbW1pbmcgcG9vbCwgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MzMwMDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5UaG9tYXMgTWl0aGVuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjk8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3NTkzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxNjg3MzwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE2ODczPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MjUxIFJhaW5ib3cgU3RyZWV0DVNPVVRIIENPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI2NTk1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTkzPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TlNXIExBTkQgQU5EIEhPVVNJTkcgQ09SUE9SQVRJT048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5OU1cgTGFuZCBhbmQgSG91c2luZyBDb3Jwb3JhdGlvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTkzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE0NTg4NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzU5MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNQSVRFUkk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpPSE4gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIFNwaXRlcmk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNDcwNTg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5GTFlOTkU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPllWT05ORSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlkgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIFkgRmx5bm5lPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1OTM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzQ3MDU3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTkzPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkVHQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlJPTkFMRCBUSU1PVEhZPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5SVCAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBSIFQgUmVnYW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTkzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjAyPC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzA1LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMDU8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkNoYW5nZSBvZiB1c2UgZnJvbSBhIHNpbmdsZSBkd2VsbGluZyBob3VzZSB0byBhbiBhdHRhY2hlZCBkdWFsIG9jY3VwYW5jeSBjb250YWluaW5nIDIgZHdlbGxpbmdzIChvbmUgZHdlbGxpbmcgYWJvdmUgdGhlIG90aGVyKSBpbmNsdWRpbmcgaW50ZXJuYWwgYW5kIGV4dGVybmFsIGFsdGVyYXRpb25zIGFuZCBhZGRpdGlvbnMsIGV4dGVuc2lvbiB0b3dhcmRzIHRoZSBmcm9udGFnZSBhbmQgdGhlIHJlYXIgYXQgdGhlIGdyb3VuZCBmbG9vciB3aXRoIHJlYXIgY2FiYW5hLCBleHRlbmRlZCBiYWxjb255IGF0IHRoZSBmaXJzdCBmbG9vciwgY2hhbmdlcyB0byB3aW5kb3dzLCBhZGRpdGlvbiBvZiBhIGhhcmQgc3RhbmQgY2FyIHBhcmtpbmcgc3BhY2UgZm9yIHVuaXQgMiwgbmV3IHBhdmluZywgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+Mjc1MDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5UaG9tYXMgTWl0aGVuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjk8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3NjAyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxNDgxMDwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE0ODEwPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2MDI8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MzIgTml4IEF2ZW51ZQ1NQUxBQkFSICBOU1cgIDIwMzYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPlNvdXRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzYwMjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI2NTk1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjAyPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TlNXIExBTkQgQU5EIEhPVVNJTkcgQ09SUE9SQVRJT048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5OU1cgTGFuZCBhbmQgSG91c2luZyBDb3Jwb3JhdGlvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjAyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE0NTg4NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzYwMjwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNQSVRFUkk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpPSE4gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIFNwaXRlcmk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzYwMjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc2MDI8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzYwMjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD42MzE0NDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzYwMjwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkNIQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNIVUkgQ0hJTkc8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlNDICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBTIEMgQ2hhbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjAyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjU3NTA1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NjAyPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0hFVU5HPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5NT09OIFdBSDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TVcgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgTSBXIENoZXVuZzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NjAyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzYwMjwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc2MDI8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODc1OTI8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8zMDQvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjMwNDwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+Q29uc3RydWN0aW9uIG9mIGEgZGV0YWNoZWQgc2luZ2xlIHN0b3JleSBTZWNvbmRhcnkgRHdlbGxpbmcgYXQgdGhlIHJlYXIsIGFkZGl0aW9uIG9mIGEgc3dpbW1pbmcgcG9vbCwgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MjIwMDAwLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5UaG9tYXMgTWl0aGVuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjk8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3NTkyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMwNTYyOTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzA1NjI5PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTI8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+NTMgRWFzdGVybiBBdmVudWUNS0lOR1NGT1JEICBOU1cgIDIwMzIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPldlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI2NTk1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTkyPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TlNXIExBTkQgQU5EIEhPVVNJTkcgQ09SUE9SQVRJT048L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5OU1cgTGFuZCBhbmQgSG91c2luZyBDb3Jwb3JhdGlvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3NTkyPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE0NTg4NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzU5MjwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlNQSVRFUkk8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpPSE4gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIFNwaXRlcmk8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTI8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNjczOTA8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODc1OTI8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NT1JBSVRJUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+Q09OU1RBTlRJTiA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkMgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBDIE1vcmFpdGlzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1OTI8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjY3MzkxPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTkyPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TU9SQUlUSVM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkxPVUtJQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkwgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBMIE1vcmFpdGlzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODc1OTI8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3NTkyPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzU5MjwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjIxOTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMwMy8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzAzPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5EZW1vbGl0aW9uIG9mIHR3byBleGlzdGluZyBidWlsZGluZ3MgYW5kIHN0cnVjdHVyZXM7IGV4Y2F2YXRpb24gYmVsb3cgZ3JvdW5kIGxldmVsIGZvciBvbmUgbGV2ZWwgb2YgYmFzZW1lbnQgY2FyIHBhcmtpbmc7IGNvbnN0cnVjdGlvbiBvZiBhIHRocmVlIHN0b3JleSByZXNpZGVudGlhbCBmbGF0IGJ1aWxkaW5nLCBjb21wcmlzaW5nIDYgYXBhcnRtZW50cyAxMCBjYXIgcGFya2luZyBzcGFjZXMgYW5kIDcxNy45c3FtIG9mIEdGQTsgc2l0ZSBsYW5kc2NhcGluZzsgdmVoaWN1bGFyIGFjY2VzcyB2aWEgQmVyd2ljayBTdHJlZXQgYW5kIGF1Z21lbnRhdGlvbiBvZiBzZXJ2aWNlcyBpbmZyYXN0cnVjdHVyZSBhbmQgdXRpbGl0aWVzIChWYXJpYXRpb24gdG8gSGVpZ2h0IGFuZCBHRkEpLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTIzVDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTMwVDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjM3ODU1MzMuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPkxvdWlzIENvb3JleSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTY8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg2MjE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5OTI1NDwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk5MjU0PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODYyMTk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MyBCZXJ3aWNrIFN0cmVldA1DT09HRUUgIE5TVyAgMjAzNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjIxOTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+Mjk5MjU1PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4yOTkyNTU8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjIxOTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT41IEJlcndpY2sgU3RyZWV0DUNPT0dFRSAgTlNXICAyMDM0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+RWFzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2MjE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDg4MjI0PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MjE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+VVJCSVM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5VcmJpczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2MjE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjI0MTI4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MjE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODYyMTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDcxOTA5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MjE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjM8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+S09MTE48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlJZQU4gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5SICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBSIEtvbGxuPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODYyMTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzMwNTY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODYyMTk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5WQUtBUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+QklMTCA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkIgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEIgVmFrYXM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjIxOTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zMzA1NzwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjIxOTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlZBS0FTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5IRUxFTiA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkggICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBIIFZha2FzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODYyMTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MjE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjIxOTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjA1NzwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzMwMi8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MzAyPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5BbHRlcmF0aW9ucyBhbmQgYWRkaXRpb25zIHRvIGV4aXN0aW5nIHJlc2lkZW50aWFsIGR3ZWxsaW5nIGluY2x1ZGluZyByZWFyIGV4dGVuc2lvbiB0byBncm91bmQgZmxvb3IsIGZpcnN0IGZsb29yIGFuZCBhdHRpYywgbmV3IGRvcm1lciBhbmQgaW50ZXJuYWwgYWx0ZXJhdGlvbnMsIGFuZCBzd2ltbWluZyBwb29sIChIZXJpdGFnZSBJdGVtKS48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0yM1QwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0zMFQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4xNTAwMDAuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPkV1bmljZSBIdWFuZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTY8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg2MDU3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxNTE5ODwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE1MTk4PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODYwNTc8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MTcgT3N3YWxkIFN0cmVldA1SQU5EV0lDSyAgTlNXICAyMDMxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkVhc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjA1NzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM3ODg2NjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjA1NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkpVREQ8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPk1PWUEgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5NICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBNIEp1ZGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjA1NzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNDEyODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjA1NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2MDU3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ3NDgzOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjA1NzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkZSRU5DSDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+RElBTkEgRUxJWkFCRVRIPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5ERSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBEIEUgRnJlbmNoPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODYwNTc8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDc0ODM4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MDU3PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+SkVXRUxMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5QQVVMIEpPSE48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPlBKICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIFAgSiBKZXdlbGw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjA1NzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODYwNTc8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2MDU3PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzAxLzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMDE8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlBhcnRpYWwgZGVtb2xpdGlvbiBvZiBleGlzdGluZyBkd2VsbGluZyBhbmQgY29uc3RydWN0aW9uIG9mIGEgMyBzdG9yZXkgYXR0YWNoZWQgZHVhbCBvY2N1cGFuY3kgd2l0aCBkb3VibGUgZ2FyYWdlcywgbGFuZHNjYXBpbmcgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMzBUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+OTE0MTg2LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5TYWNoYSBLYWxlc3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjk8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3MzQ5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5ODA4MTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk4MDgxPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczNDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+NDMgQXZvY2EgU3RyZWV0DVJBTkRXSUNLICBOU1cgIDIwMzEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPk5vcnRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQzMDk1PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TEVFPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5KT1NFUEggVFVOR1lFVU5HPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KVCAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIFQgTGVlPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTkwNjYwPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+RFJBQ09QT1VMT1M8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPktBVEpBIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+SyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXJzIEsgRHJhY29wb3Vsb3M8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xOTA2NTg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczNDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5EUkFDT1BPVUxPUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+UkFQSEFFTCBCQUxBUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UkIgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUiBCIERyYWNvcG91bG9zPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTY3MTE5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTkwNjYwPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+RFJBQ09QT1VMT1M8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPktBVEpBIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+SyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXJzIEsgRHJhY29wb3Vsb3M8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xOTA2NTg8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczNDk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5EUkFDT1BPVUxPUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+UkFQSEFFTCBCQUxBUzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+UkIgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgUiBCIERyYWNvcG91bG9zPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NzM0NTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzc2LzIwMjAvQTwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+QXBwcm92ZWQ8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+NzY8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QW1lbmRtZW50PkE8L0FtZW5kbWVudD4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlM0LjU1KDEpIE1vZGlmaWNhdGlvbiB0byBjb3JyZWN0IGVycm9yLiBPcmlnaW5hbCBjb25zZW50OiBBbHRlcmF0aW9ucyBhbmQgYWRkaXRpb25zIHRvIHRoZSBSb3lhbCBSYW5kd2ljayBTaG9wcGluZyBDZW50cmUsIGluY2x1ZGluZyB1cGdyYWRlIHdvcmtzIHRvIHRoZSBub3J0aGVybiBhbmQgc291dGhlcm4gcGVkZXN0cmlhbiBlbnRyYW5jZXMgb24gQmVsbW9yZSBSb2FkIGFuZCBwZWRlc3RyaWFuIGVudHJhbmNlIG9uIEF2b2NhIFN0cmVldCwgaW5jbHVkaW5nIHVwZ3JhZGUgd29ya3MgdG8gdGhlIGNhciBwYXJrIGVudHJhbmNlIGFuZCBsb2FkaW5nIGRvY2sgb24gQXZvY2EgU3RyZWV0LCBkaXJlY3Rpb25hbCBzaWduYWdlLCBtdXJhbHMgYW5kIGFzc29jaWF0ZWQgd29ya3MuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMjlUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMjlUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPERldGVybWluYXRpb25EYXRlPjIwMjAtMDYtMzBUMTQ6MTY6MzQuMisxMDowMDwvRGV0ZXJtaW5hdGlvbkRhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+NTc2NDEyLjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlclRpdGxlPlBsYW5uaW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyVGl0bGU+DQogICAgPE9mZmljZXI+UGVycnkgSGVhZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xMDwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxEZXRlcm1pbmF0aW9uPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPERldGVybWluYXRpb25EYXRlPjIwMjAtMDYtMzBUMTQ6MTY6MzQuMisxMDowMDwvRGV0ZXJtaW5hdGlvbkRhdGU+DQogICAgICA8RWZmZWN0aXZlRGF0ZT4yMDIwLTA2LTMwVDAwOjAwOjAwKzEwOjAwPC9FZmZlY3RpdmVEYXRlPg0KICAgICAgPERldGVybWluYXRpb25UeXBlPkFwcHJvdmVkPC9EZXRlcm1pbmF0aW9uVHlwZT4NCiAgICAgIDxBdXRob3JpdHlQYXJ0eT5EZWxlZ2F0ZWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQXV0aG9yaXR5UGFydHk+DQogICAgICA8RGVjaXNpb25JZD4zNzMzMzk8L0RlY2lzaW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MzQ1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0RldGVybWluYXRpb24+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4yOTkxNzM8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5OTE3MzwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjczLTEwOSBCZWxtb3JlIFJvYWQNUkFORFdJQ0sgIE5TVyAgMjAzMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5XZXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD43NDkxMDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzM0NTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QWZmZWN0ZWQgUGVyc29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkxVREhFUjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+SkFDUVVFTElORSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkogICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIEogTHVkaGVyPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzM5ODQzPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TFVESEVSPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5KQUdKRVQgU0lOR0g8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkpTICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEogUyBMdWRoZXI8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40OTE5NzI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczNDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5DUk9VQ0FNUDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+Q0hSSVNUT1BIRVIgPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5DICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBDIENyb3VjYW1wPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTY3MTE5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODczNDU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjQzODg4PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MzQ1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+QU1QIENBUElUQUwgSU5WRVNUT1JTIExURDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkFNUCBDYXBpdGFsIEludmVzdG9ycyBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzM0NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODczNDU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MzQ1PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg3MTYwPC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMzAwLzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMjA8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4zMDA8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPkFsdGVyYXRpb25zIGFuZCBhZGRpdGlvbnMgdG8gZXhpc3RpbmcgZHdlbGxpbmcgaG91c2UgaW5jbHVkaW5nIGdyb3VuZCBmbG9vciBleHRlbnNpb24gdG8gdGhlIHJlYXIsIHJlaW5zdGF0ZW1lbnQgb2YgZ3JvdW5kIGZsb29yIHZlcmFuZGEgaW4gdGhlIGZyb250LCBhZGRpdGlvbiBvZiBhIGhhcmRzdGFuZCBjYXIgcGFya2luZyBzcGFjZSBpbiB0aGUgZnJvbnRhZ2UsIHVwZ3JhZGVzIHRvIGZyb250IGZlbmNlIGFuZCBwZWRlc3RyaWFuIGVudHJhbmNlLCBhbmQgYXNzb2NpYXRlZCB3b3Jrcy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0yOVQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0yOVQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD45NTAwMC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+Um9zZWFubmEgTWVlY2ggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xMDwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODcxNjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzA4MzE1PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMDgzMTU8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzE2MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4zNCBHcmV2aWxsZSBTdHJlZXQNQ0xPVkVMTFkgIE5TVyAgMjAzMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+Tm9ydGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MTYwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzUyMjIwPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MTYwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+QUNUSVZBVEUgTk8gMSBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+QWN0aXZhdGUgKE5vIDEpIFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzE2MDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yMjYyODc8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODcxNjA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQUlORVM8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPktFTExZIEJFVFRJTkE8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPktCICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1ycyBLIEIgUmFpbmVzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODcxNjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MTY3MTE5PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MTYwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5NdW5pY2lwYWxpdHkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFORFdJQ0sgQ0lUWSBDT1VOQ0lMPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+UmFuZHdpY2sgQ2l0eSBDb3VuY2lsPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODcxNjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MjI2Mjg3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MTYwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+UkFJTkVTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5LRUxMWSBCRVRUSU5BPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5LQiAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcnMgSyBCIFJhaW5lczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MTYwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzE2MDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODcxNjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODcwMzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8yOTcvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjI5NzwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+RGVtb2xpdGlvbiBvZiBleGlzdGluZyBzdHJ1Y3R1cmVzIGFuZCBjb25zdHJ1Y3Rpb24gb2YgYSBmb3VyIHN0b3JleSwgODYgcm9vbSBib2FyZGluZyBob3VzZSAoaW5jbHVkaW5nIDEgb24tc2l0ZSBtYW5hZ2VyJ3Mgcm9vbSkgd2l0aCBiYXNlbWVudCBwYXJraW5nLCB0cmVlIHJlbW92YWwsIGxhbmRzY2FwaW5nIGFuZCBhc3NvY2lhdGVkIHdvcmtzICh2YXJpYXRpb25zIHRvIGJ1aWxkaW5nIGhlaWdodCBhbmQgRlNSIG9mIHRoZSBSTEVQIDIwMTIpLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjkxMzAwMDAuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPkxvdWlzIENvb3JleSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTM8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg3MDMwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjI5NTY5MTwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+Mjk1NjkxPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODcwMzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+OSBBYmJvdGZvcmQgU3RyZWV0DUtFTlNJTkdUT04gIE5TVyAgMjAzMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPldlc3QgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzAzMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+Mjk1NjkyPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4yOTU2OTI8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzAzMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4xMSBBYmJvdGZvcmQgU3RyZWV0DUtFTlNJTkdUT04gIE5TVyAgMjAzMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+V2VzdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MDMwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4yOTU2OTQ8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5NTY5NDwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MDMwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjEzIEFiYm90Zm9yZCBTdHJlZXQNS0VOU0lOR1RPTiAgTlNXICAyMDMzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5XZXN0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODcwMzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zNTIzNDE8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODcwMzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFmZmVjdGVkIFBlcnNvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQVJESUFOQTwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TklOQSA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk4gICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1zIE4gTWFyZGlhbmE8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzAzMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDU1ODM8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODcwMzA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5EQVZJRCBNSVRDSEVMTCBBUkNISVRFQ1RTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+RGF2aWQgTWl0Y2hlbGwgQXJjaGl0ZWN0czwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MDMwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzAzMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg3MDMwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjEzOTA1MjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NzAzMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlRIRSBPV05FUlMgU1RSQVRBIFBMQU4gTk8gMTI5MjA8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5UaGUgT3duZXJzIC0gU3RyYXRhIFBsYW4gTm8uIDEyOTIwPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODcwMzA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg3MDMwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NzAzMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjQ5OTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzI5Ni8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+Mjk2PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5EZW1vbGl0aW9uIG9mIHRoZSBleGlzdGluZyBkd2VsbGluZyBhbmQgdGhlIGNvbnN0cnVjdGlvbiBvZiBhIHR3byBzdG9yZXkgZHdlbGxpbmcgd2l0aCBkb3VibGUgZ2FyYWdlIGFuZCBpbmdyb3VuZCBwb29sLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTI0VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0Pjc2OTg2OC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+UGVycnkgSGVhZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xNTwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODY0OTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzExODIyPC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMTE4MjI8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjQ5OTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4xMDYgTWFjcXVhcmllIFN0cmVldA1DSElGTEVZICBOU1cgIDIwMzYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+U291dGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NDk5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Mzc0MjAxPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NDk5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+U1RBTklTPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5OSUtPUyA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk4gICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIE4gU3RhbmlzPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY0OTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Mzc3OTgzPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NDk5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0hBTjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+RURNT05EIFNFQU48L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkVTICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEUgUyBDaGFuPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY0OTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Mzc3OTg0PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NDk5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjI8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+Q0hBTjwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+TUFSRUUgQU5ORTwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TUEgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXMgTSBBIENoYW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjQ5OTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY0OTk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NDk5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODIwPC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMjk1LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPkFwcHJvdmVkPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjI5NTwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+VG9ycmVucyB0aXRsZSBzdWJkaXZpc2lvbiBvZiBleGlzdGluZyBkdWFsIG9jY3VwYW5jeSBpbnRvIHR3byBsb3RzLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxEZXRlcm1pbmF0aW9uRGF0ZT4yMDIwLTA3LTAyVDEzOjQyOjI1LjkrMTA6MDA8L0RldGVybWluYXRpb25EYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0PjAuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPlBlcnJ5IEhlYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTM8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg2ODIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8RGV0ZXJtaW5hdGlvbj4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjgyMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxEZXRlcm1pbmF0aW9uRGF0ZT4yMDIwLTA3LTAyVDEzOjQyOjI1LjkrMTA6MDA8L0RldGVybWluYXRpb25EYXRlPg0KICAgICAgPEVmZmVjdGl2ZURhdGU+MjAyMC0wNy0wMlQwMDowMDowMCsxMDowMDwvRWZmZWN0aXZlRGF0ZT4NCiAgICAgIDxEZXRlcm1pbmF0aW9uVHlwZT5BcHByb3ZlZDwvRGV0ZXJtaW5hdGlvblR5cGU+DQogICAgICA8QXV0aG9yaXR5UGFydHk+RGVsZWdhdGVkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0F1dGhvcml0eVBhcnR5Pg0KICAgICAgPERlY2lzaW9uSWQ+MzczNjAzPC9EZWNpc2lvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjgyMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9EZXRlcm1pbmF0aW9uPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzA3OTc5PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMDc5Nzk8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjgyMDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4xMSBHaWxlcyBTdHJlZXQNQ0hJRkxFWSAgTlNXICAyMDM2ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+U291dGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2ODIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+MzM0NDUyPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+U1VQRVJJT1IgREVTSUdOUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlN1cGVyaW9yIERlc2lnbnM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjgyMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY4MjA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjgyMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MzE0Nzc8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY4MjA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5LRUhBTkU8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkpBQ0sgQU5EUkVXPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KQSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIEEgS2VoYW5lPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY4MjA8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+Mjk5MDQ3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODIwPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5Pd25lciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+S0VIQU5FPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5NQVJLIFBBVFJJQ0s8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPk1QICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIE0gUCBLZWhhbmU8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjgyMDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8RXZlbnQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY4MjA8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2ODIwPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0V2ZW50Pg0KICA8L0FwcGxpY2F0aW9uPg0KICA8QXBwbGljYXRpb24+DQogICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODE5PC9BcHBsaWNhdGlvbklkPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uPkRldmVsb3BtZW50IEFwcGxpY2F0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OYXR1cmVPZkFwcGxpY2F0aW9uPg0KICAgIDxOYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT40Mzc8L05hdHVyZU9mQXBwbGljYXRpb25UeXBlPg0KICAgIDxSZWZlcmVuY2VOdW1iZXI+REEvMjk0LzIwMjA8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPlVuZGVyIEFzc2Vzc21lbnQ8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+Mjk0PC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5Ub3JyZW5zIHRpdGxlIHN1YmRpdmlzaW9uIG9mIGV4aXN0aW5nIGR1YWwgb2NjdXBhbmN5IGludG8gdHdvIGxvdHMuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMjZUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMjZUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+QWxleGFuZHJhIE1hcmtzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xMzwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODY4MTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+Mjk5Mzg5PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4yOTkzODk8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjgxOTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4xMjIgQmlsZ2EgQ3Jlc2NlbnQNTUFMQUJBUiAgTlNXICAyMDM2ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+U291dGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2ODE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4zNjkyMDk8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5OTM4OTwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjEyMkEgQmlsZ2EgQ3Jlc2NlbnQNTUFMQUJBUiAgTlNXICAyMDM2ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Tb3V0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY4MTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zMzQ0NTI8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY4MTk8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5TVVBFUklPUiBERVNJR05TPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+U3VwZXJpb3IgRGVzaWduczwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2ODE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjE2NzExOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjgxOTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2ODE5PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQyNzk2NjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjgxOTwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkVWSVNIIFBUWSBMVEQ8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5FVklTSCBQVFkgTFREPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY4MTk8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2ODE5PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjgxOTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjEyMzwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzI5My8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MjkzPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5BbHRlcmF0aW9ucyBhbmQgYWRkaXRpb25zIHRvIHJlYXIgb2YgZXhpc3RpbmcgZHdlbGxpbmcsIGluY2x1ZGluZyBuZXcgZWxldmF0b3IgKGxpZnQpIGFuZCBpbi1ncm91bmQgc3dpbW1pbmcgcG9vbC48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0yM1QwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0yNlQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4yMDI3MzAuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPkV1bmljZSBIdWFuZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTY8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg2MTIzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxMzI3NDwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzEzMjc0PC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODYxMjM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MTEgTWVybWFpZCBBdmVudWUNTUFST1VCUkEgIE5TVyAgMjAzNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPkNlbnRyYWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjEyMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjIyMzY2NTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjEyMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkJSRVdTVEVSIE1VUlJBWSBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+QnJld3N0ZXIgTXVycmF5IFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjEyMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNDEyODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjEyMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2MTIzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjMyMjkyOTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjEyMzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPllFPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5NQU8gR0lORzwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+TUcgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgTSBHIFllPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODYxMjM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2MTIzPC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjEyMzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4Njk4NDwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzE0Ni8yMDE3L0E8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMTc8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj4xNDY8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QW1lbmRtZW50PkE8L0FtZW5kbWVudD4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlM0LjU1KDIpIE1vZGlmaWNhdGlvbiBBcHBsaWNhdGlvbiB0byBhcHByb3ZlZCBkZXZlbG9wbWVudCBpbmNsdWRpbmcgYWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byBleHRlbmQgZmxvb3IgYXJlYSBhdCBzZWNvbmQgZmxvb3IgbGV2ZWxzLCBlbmxhcmdlZCBzd2ltbWluZyBwb29scyBhbmQgcmVkdWNlZCBkZWNraW5nLiBPcmlnaW5hbCBDb25zZW50OiBEZW1vbGl0aW9uIG9mIHRoZSBleGlzdGluZyBzdHJ1Y3R1cmVzLCBjb25zdHJ1Y3Rpb24gb2YgYSAzIHN0b3JleSBhdHRhY2hlZCBkdWFsIG9jY3VwYW5jeSB3aXRoIGdhcmFnZXMgdG8gZnJvbnQsIHNwYSBwb29scyB0byByZWFyLCBsYW5kc2NhcGluZyBhbmQgYXNzb2NpYXRlZCB3b3JrcyAodmFyaWF0aW9uIHRvIGZsb29yIHNwYWNlIHJhdGlvIGNvbnRyb2wpLjwvQXBwbGljYXRpb25EZXRhaWxzPg0KICAgIDxDcmVhdGVkRGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9DcmVhdGVkRGF0ZT4NCiAgICA8TG9kZ2VtZW50RGF0ZT4yMDIwLTA2LTI2VDAwOjAwOjAwKzEwOjAwPC9Mb2RnZW1lbnREYXRlPg0KICAgIDxFc3RpbWF0ZWRDb3N0Pjg1MDAwMC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+QWxleGFuZHJhIE1hcmtzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xMzwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODY5ODQ8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzA1NDQ1PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMDU0NDU8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4Njk4NDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4yNiBEd3llciBBdmVudWUNTElUVExFIEJBWSAgTlNXICAyMDM2ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+U291dGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2OTg0PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDEwNzY3PC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2OTg0PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BZmZlY3RlZCBQZXJzb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+TElVPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5aSEFPQk8gPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5aICAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBaIExpdTwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2OTg0PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQxNjU4MTwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4Njk4NDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkdSQSBERVZFTE9QTUVOVCBQVFkgTFREPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+R1JBIERldmVsb3BtZW50IFB0eSBMdGQ8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4Njk4NDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY5ODQ8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4Njk4NDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40MTY1ODE8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY5ODQ8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5HUkEgREVWRUxPUE1FTlQgUFRZIExURDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkdSQSBEZXZlbG9wbWVudCBQdHkgTHRkPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY5ODQ8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2OTg0PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4Njk4NDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjU3NTwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzY1Ny8yMDE4L0E8L1JlZmVyZW5jZU51bWJlcj4NCiAgICA8U3RhdHVzPk5vdGlmaWNhdGlvbi9BZHZlcnRpc2luZzwvU3RhdHVzPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJZZWFyPjIwMTg8L1JlZmVyZW5jZU51bWJlclllYXI+DQogICAgPFJlZmVyZW5jZU51bWJlck51bWJlcj42NTc8L1JlZmVyZW5jZU51bWJlck51bWJlcj4NCiAgICA8QW1lbmRtZW50PkE8L0FtZW5kbWVudD4NCiAgICA8QXBwbGljYXRpb25EZXRhaWxzPlNlY3Rpb24gNC41NSgyKSBtb2RpZmljYXRpb24gdG8gYXBwcm92ZWQgZGV2ZWxvcG1lbnQgdG8gZGVsZXRlIENvbmRpdGlvbiAyKGIpIHdoaWNoIHJlcXVpcmVzIGEgZ2xhc3MgYmFsdXN0cmFkZSB0byBiYWxjb255IGFib3ZlIHRoZSBnYXJhZ2U7IGFsdGVyIHByaXZhY3kgc2NyZWVuaW5nIGFsb25nIHRoZSBlYXN0ZXJuIGVsZXZhdGlvbiBhbmQgaW5zdGFsbGF0aW9uIG9mIGZyb250IGZlbmNlIGFuZCBnYXRlLiBPcmlnaW5hbCBDb25zZW50OiBEZW1vbGl0aW9uIG9mIGV4aXN0aW5nIHN0cnVjdHVyZXMsIGNvbnN0cnVjdGlvbiBvZiAyIHN0b3JleSBkd2VsbGluZyB3aXRoIGdhcmFnZSB0byBmcm9udCwgc3dpbW1pbmcgcG9vbCB0byByZWFyLCBsYW5kc2NhcGluZyBhbmQgYXNzb2NpYXRlZCB3b3Jrcy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0yNVQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0yNVQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD4xNzA2MDQ3LjAwMDAwMDwvRXN0aW1hdGVkQ29zdD4NCiAgICA8T2ZmaWNlcj5DaGFocmF6YWQgUmFoZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvT2ZmaWNlcj4NCiAgICA8REFEYXlzPjE0PC9EQURheXM+DQogICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU3NTwvQXBwbGljYXRpb25JZFM+DQogICAgPEFkZHJlc3M+DQogICAgICA8UHJvcGVydHlJZD4yOTg2Njc8L1Byb3BlcnR5SWQ+DQogICAgICA8UGFyY2VsSWQ+MDwvUGFyY2VsSWQ+DQogICAgICA8R2VvY29kZUlkPjI5ODY2NzwvR2VvY29kZUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NTc1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPExpbmUxPjI3IEJhdHRlcnkgU3RyZWV0DUNMT1ZFTExZICBOU1cgIDIwMzEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbmUxPg0KICAgICAgPExpbmUyIC8+DQogICAgICA8V2FyZD5Ob3J0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvV2FyZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY1NzU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvQWRkcmVzcz4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDUyODU8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NzU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MjwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQUNHVUlHQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkFORFJFVyA8L0dpdmVuTmFtZT4NCiAgICAgIDxJbml0aWFsPkEgICAgPC9Jbml0aWFsPg0KICAgICAgPE5hbWVUeXBlPlA8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPk1yIEEgTWNHdWlnYW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU3NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD41MDUyNzY8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NzU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPkFwcGxpY2FudCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQUNHVUlHQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkNBUk9MSU5FIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+QyAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXJzIEMgTWNHdWlnYW48L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU3NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4xNjcxMTk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NzU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk11bmljaXBhbGl0eSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5SQU5EV0lDSyBDSVRZIENPVU5DSUw8L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lIHhtbDpzcGFjZT0icHJlc2VydmUiPiA8L0dpdmVuTmFtZT4NCiAgICAgIDxOYW1lVHlwZT5DPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5SYW5kd2ljayBDaXR5IENvdW5jaWw8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU3NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD40NDMxMTc8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NzU8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MzwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5NQUNHVUlHQU48L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPkNBUk9MSU5FIEVMT0lTRTwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+Q0VNICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXJzIEMgRSBNIE1jR3VpZ2FuPC9GdWxsTmFtZT4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY1NzU8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvUGFydHk+DQogICAgPEV2ZW50Pg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NTc1PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU3NTwvQXBwbGljYXRpb25JZFM+DQogICAgPC9FdmVudD4NCiAgPC9BcHBsaWNhdGlvbj4NCiAgPEFwcGxpY2F0aW9uPg0KICAgIDxBcHBsaWNhdGlvbklkPjY4NjU1MzwvQXBwbGljYXRpb25JZD4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvbj5EZXZlbG9wbWVudCBBcHBsaWNhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmF0dXJlT2ZBcHBsaWNhdGlvbj4NCiAgICA8TmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+NDM3PC9OYXR1cmVPZkFwcGxpY2F0aW9uVHlwZT4NCiAgICA8UmVmZXJlbmNlTnVtYmVyPkRBLzI5Mi8yMDIwPC9SZWZlcmVuY2VOdW1iZXI+DQogICAgPFN0YXR1cz5Ob3RpZmljYXRpb24vQWR2ZXJ0aXNpbmc8L1N0YXR1cz4NCiAgICA8UmVmZXJlbmNlTnVtYmVyWWVhcj4yMDIwPC9SZWZlcmVuY2VOdW1iZXJZZWFyPg0KICAgIDxSZWZlcmVuY2VOdW1iZXJOdW1iZXI+MjkyPC9SZWZlcmVuY2VOdW1iZXJOdW1iZXI+DQogICAgPEFwcGxpY2F0aW9uRGV0YWlscz5FeHRlbnNpdmUgYWx0ZXJhdGlvbnMgYW5kIGFkZGl0aW9ucyB0byBleGlzdGluZyBkd2VsbGluZyBob3VzZSwgaW5jbHVkaW5nIGV4dGVuc2l2ZSBkZW1vbGl0aW9uIGFuZCByZXRlbnRpb24gb2Ygc29tZSBsb3dlciBncm91bmQgZmxvb3Igd2FsbHMsIGxvd2VyIGdyb3VuZCBmbG9vciBleHRlbnNpb24sIGRlbW9saXRpb24gb2YgZW50aXJlIGdyb3VuZCBmbG9vciBhbmQgcm9vZiwgYW5kIGNvbnN0cnVjdGlvbiBvZiBhIG5ldyBncm91bmQgZmxvb3IgdGhhdCBleHRlbmRzIG91dCB0byB0aGUgcmVhciwgYWRkaXRpb24gb2YgYSBwb29sIGFuZCBkZWNraW5nIGluIHRoZSByZWFyLCBleGNhdmF0aW9uLCBsYW5kc2NhcGluZyBhbmQgYXNzb2NpYXRlZCB3b3Jrcy48L0FwcGxpY2F0aW9uRGV0YWlscz4NCiAgICA8Q3JlYXRlZERhdGU+MjAyMC0wNi0yNVQwMDowMDowMCsxMDowMDwvQ3JlYXRlZERhdGU+DQogICAgPExvZGdlbWVudERhdGU+MjAyMC0wNi0yNVQwMDowMDowMCsxMDowMDwvTG9kZ2VtZW50RGF0ZT4NCiAgICA8RXN0aW1hdGVkQ29zdD43OTY1NzIuMDAwMDAwPC9Fc3RpbWF0ZWRDb3N0Pg0KICAgIDxPZmZpY2VyPlRob21hcyBNaXRoZW4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9PZmZpY2VyPg0KICAgIDxEQURheXM+MTQ8L0RBRGF5cz4NCiAgICA8QXBwbGljYXRpb25JZFM+Njg2NTUzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8QWRkcmVzcz4NCiAgICAgIDxQcm9wZXJ0eUlkPjMxNTc3MjwvUHJvcGVydHlJZD4NCiAgICAgIDxQYXJjZWxJZD4wPC9QYXJjZWxJZD4NCiAgICAgIDxHZW9jb2RlSWQ+MzE1NzcyPC9HZW9jb2RlSWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8TGluZTE+MzggUGF1bGluZyBBdmVudWUNQ09PR0VFICBOU1cgIDIwMzQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTGluZTE+DQogICAgICA8TGluZTIgLz4NCiAgICAgIDxXYXJkPk5vcnRoICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9XYXJkPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU1MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9BZGRyZXNzPg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ2MTgxMjwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjU1MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+QXBwbGljYW50ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJPVEggQVJDSElURUNUVVJFIFdPUktTSE9QPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZSB4bWw6c3BhY2U9InByZXNlcnZlIj4gPC9HaXZlbk5hbWU+DQogICAgICA8TmFtZVR5cGU+QzwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+Um90aCBBcmNoaXRlY3R1cmUgV29ya3Nob3A8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjU1MzwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4zOTY3Nzk8L1BhcnR5SWQ+DQogICAgICA8QXBwbGljYXRpb25JZD42ODY1NTM8L0FwcGxpY2F0aW9uSWQ+DQogICAgICA8UGFydHlSb2xlPk93bmVyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9QYXJ0eVJvbGU+DQogICAgICA8U2VxdWVuY2U+MTwvU2VxdWVuY2U+DQogICAgICA8RmFtaWx5TmFtZT5GSUVMRElORzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWU+SkFTT04gQU5EUkVXPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5KQUcgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NciBKIEEgRyBGaWVsZGluZzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NTUzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjM5Njc4MDwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjU1MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4yPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPk1PUkVMTE88L0ZhbWlseU5hbWU+DQogICAgICA8R2l2ZW5OYW1lPlNBU0hBIE1JQ0hFTExFPC9HaXZlbk5hbWU+DQogICAgICA8SW5pdGlhbD5TTSAgIDwvSW5pdGlhbD4NCiAgICAgIDxOYW1lVHlwZT5QPC9OYW1lVHlwZT4NCiAgICAgIDxGdWxsTmFtZT5NcyBTIE0gTW9yZWxsbzwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NTUzPC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjU1MzwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY1NTM8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQogIDxBcHBsaWNhdGlvbj4NCiAgICA8QXBwbGljYXRpb25JZD42ODY0MjQ8L0FwcGxpY2F0aW9uSWQ+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb24+RGV2ZWxvcG1lbnQgQXBwbGljYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICA8L05hdHVyZU9mQXBwbGljYXRpb24+DQogICAgPE5hdHVyZU9mQXBwbGljYXRpb25UeXBlPjQzNzwvTmF0dXJlT2ZBcHBsaWNhdGlvblR5cGU+DQogICAgPFJlZmVyZW5jZU51bWJlcj5EQS8yOTEvMjAyMDwvUmVmZXJlbmNlTnVtYmVyPg0KICAgIDxTdGF0dXM+Tm90aWZpY2F0aW9uL0FkdmVydGlzaW5nPC9TdGF0dXM+DQogICAgPFJlZmVyZW5jZU51bWJlclllYXI+MjAyMDwvUmVmZXJlbmNlTnVtYmVyWWVhcj4NCiAgICA8UmVmZXJlbmNlTnVtYmVyTnVtYmVyPjI5MTwvUmVmZXJlbmNlTnVtYmVyTnVtYmVyPg0KICAgIDxBcHBsaWNhdGlvbkRldGFpbHM+RGVtb2xpdGlvbiBvZiBleGlzdGluZyBzdHJ1Y3R1cmVzIGFuZCBjb250cnVjdGlvbiBvZiBhIHR3byBzdG9yZXkgYXR0YWNoZWQgZHVhbCBvY2N1cGFuY3kgd2l0aCBhIHBsdW5nZSBwb29sIHRvIGVhY2ggZHdlbGxpbmcgKHZhcmlhdGlvbiB0byBGU1IgY29udHJvbCkuPC9BcHBsaWNhdGlvbkRldGFpbHM+DQogICAgPENyZWF0ZWREYXRlPjIwMjAtMDYtMjRUMDA6MDA6MDArMTA6MDA8L0NyZWF0ZWREYXRlPg0KICAgIDxMb2RnZW1lbnREYXRlPjIwMjAtMDYtMjVUMDA6MDA6MDArMTA6MDA8L0xvZGdlbWVudERhdGU+DQogICAgPEVzdGltYXRlZENvc3Q+MTQ2NjgzNC4wMDAwMDA8L0VzdGltYXRlZENvc3Q+DQogICAgPE9mZmljZXI+U2FjaGEgS2FsZXNzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L09mZmljZXI+DQogICAgPERBRGF5cz4xNTwvREFEYXlzPg0KICAgIDxBcHBsaWNhdGlvbklkUz42ODY0MjQ8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDxBZGRyZXNzPg0KICAgICAgPFByb3BlcnR5SWQ+MzE0ODA3PC9Qcm9wZXJ0eUlkPg0KICAgICAgPFBhcmNlbElkPjA8L1BhcmNlbElkPg0KICAgICAgPEdlb2NvZGVJZD4zMTQ4MDc8L0dlb2NvZGVJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjQyNDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxMaW5lMT4yOSBOaXggQXZlbnVlDU1BTEFCQVIgIE5TVyAgMjAzNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5lMT4NCiAgICAgIDxMaW5lMiAvPg0KICAgICAgPFdhcmQ+U291dGggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1dhcmQ+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NDI0PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L0FkZHJlc3M+DQogICAgPFBhcnR5Pg0KICAgICAgPFBhcnR5SWQ+NDIxMDgxPC9QYXJ0eUlkPg0KICAgICAgPEFwcGxpY2F0aW9uSWQ+Njg2NDI0PC9BcHBsaWNhdGlvbklkPg0KICAgICAgPFBhcnR5Um9sZT5BcHBsaWNhbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUGFydHlSb2xlPg0KICAgICAgPFNlcXVlbmNlPjE8L1NlcXVlbmNlPg0KICAgICAgPEZhbWlseU5hbWU+QVJLSEFVUzwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPkFya2hhdXM8L0Z1bGxOYW1lPg0KICAgICAgPEFwcGxpY2F0aW9uSWRTPjY4NjQyNDwvQXBwbGljYXRpb25JZFM+DQogICAgPC9QYXJ0eT4NCiAgICA8UGFydHk+DQogICAgICA8UGFydHlJZD4yNDEyODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjQyNDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+TXVuaWNpcGFsaXR5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPlJBTkRXSUNLIENJVFkgQ09VTkNJTDwvRmFtaWx5TmFtZT4NCiAgICAgIDxHaXZlbk5hbWUgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+IDwvR2l2ZW5OYW1lPg0KICAgICAgPE5hbWVUeXBlPkM8L05hbWVUeXBlPg0KICAgICAgPEZ1bGxOYW1lPlJhbmR3aWNrIENpdHkgQ291bmNpbDwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NDI0PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxQYXJ0eT4NCiAgICAgIDxQYXJ0eUlkPjQ3NTczODwvUGFydHlJZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjQyNDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxQYXJ0eVJvbGU+T3duZXIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1BhcnR5Um9sZT4NCiAgICAgIDxTZXF1ZW5jZT4xPC9TZXF1ZW5jZT4NCiAgICAgIDxGYW1pbHlOYW1lPkhBTUlMVE9OPC9GYW1pbHlOYW1lPg0KICAgICAgPEdpdmVuTmFtZT5BVFdBIDwvR2l2ZW5OYW1lPg0KICAgICAgPEluaXRpYWw+QSAgICA8L0luaXRpYWw+DQogICAgICA8TmFtZVR5cGU+UDwvTmFtZVR5cGU+DQogICAgICA8RnVsbE5hbWU+TXIgQSBIYW1pbHRvbjwvRnVsbE5hbWU+DQogICAgICA8QXBwbGljYXRpb25JZFM+Njg2NDI0PC9BcHBsaWNhdGlvbklkUz4NCiAgICA8L1BhcnR5Pg0KICAgIDxFdmVudD4NCiAgICAgIDxBcHBsaWNhdGlvbklkPjY4NjQyNDwvQXBwbGljYXRpb25JZD4NCiAgICAgIDxBcHBsaWNhdGlvbklkUz42ODY0MjQ8L0FwcGxpY2F0aW9uSWRTPg0KICAgIDwvRXZlbnQ+DQogIDwvQXBwbGljYXRpb24+DQo8L05ld0RhdGFTZXQ+
    http_version: 
  recorded_at: Tue, 14 May 2019 14:00:00 GMT
recorded_with: VCR 5.0.0
